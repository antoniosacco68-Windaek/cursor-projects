<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Foglio Presenze LavoroPi√π - Novembre 2024</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background: white;
            padding: 10px;
            color: #333;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border: 2px solid #333;
            overflow: hidden;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 2px solid #333;
            background: #f8f9fa;
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .logo {
            font-size: 32px;
            font-weight: bold;
            color: #00a8e6;
        }

        .logo .piu {
            color: #e91e63;
        }

        .gear {
            color: #e91e63;
            font-size: 24px;
        }

        .header-right {
            text-align: right;
            font-size: 12px;
        }

        .form-header {
            padding: 40px 20px 35px 20px;
            text-align: center;
            border-bottom: 1px solid #333;
            position: relative;
            z-index: 1;
            margin-top: 15px;
            margin-bottom: 15px;
        }

        .form-header h1 {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 25px;
        }

        .form-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 25px;
            font-size: 14px;
            clear: both;
        }

        .form-info input {
            border: none;
            border-bottom: 1px solid #333;
            padding: 5px;
            background: transparent;
            width: 200px;
        }

        .presenze-table {
            width: 100%;
            border-collapse: collapse;
            font-size: 12px;
            border: 1px solid #333 !important;
            outline: 1px solid #333 !important;
        }

        .presenze-table th,
        .presenze-table td {
            border: 1px solid #333 !important;
            padding: 6px;
            text-align: center;
            vertical-align: middle;
        }

        .presenze-table th {
            background: #f8f9fa;
            font-weight: bold;
            font-size: 11px;
        }

        .data-column {
            width: 40px;
            font-weight: bold;
        }

        .ordinarie-column {
            width: 60px;
        }

        .turni-column {
            width: 70px;
        }

        .straord-column {
            width: 55px;
        }

        .note-column {
            width: 180px;
        }

        .time-input {
            width: 100%;
            border: none;
            text-align: center;
            padding: 2px;
            font-size: 11px;
            background: transparent;
        }

        .note-input {
            width: 100%;
            border: none;
            padding: 2px;
            font-size: 10px;
            background: transparent;
        }

        .weekend-row {
            background: #ffe6e6;
        }

        .totale-row {
            background: #e3f2fd;
            font-weight: bold;
            height: 45px;
        }

        .totale-row td {
            vertical-align: middle;
            padding: 8px;
        }

        .footer-section {
            padding: 20px;
            border-top: 1px solid #333;
        }

        .firma-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 40px;
            margin: 20px 0;
        }

        .firma-box {
            display: inline-block !important;
            width: 48% !important;
            vertical-align: top !important;
            text-align: center;
            font-size: 12px;
            white-space: nowrap !important;
        }

        .firma-line {
            border-bottom: 1px solid #333;
            height: 60px;
            margin: 10px 0;
        }

        .avviso {
            font-size: 10px;
            text-align: center;
            margin: 20px 0;
            font-weight: bold;
        }

        .footer-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 10px;
            border-top: 1px solid #333;
            padding: 10px;
            background: #f8f9fa;
        }

        .buttons {
            margin: 20px;
            display: flex;
            gap: 10px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn {
            padding: 10px 20px;
            border: 1px solid #333;
            background: #f0f0f0;
            cursor: pointer;
            font-size: 12px;
        }

        .btn:hover {
            background: #e0e0e0;
        }

        .btn-primary {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

        @media (max-width: 768px) {
            .container {
                margin: 5px;
            }
            
            .presenze-table {
                font-size: 10px;
            }
            
            .presenze-table th,
            .presenze-table td {
                padding: 3px;
            }
            
            .header {
                flex-direction: column;
                text-align: center;
                gap: 10px;
            }
            
            .form-info {
                grid-template-columns: 1fr;
            }

            .firma-section {
                grid-template-columns: 1fr;
                gap: 20px;
            }
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #007bff;
            color: white;
            padding: 15px 20px;
            border-radius: 5px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transform: translateX(100%);
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .toast.show {
            transform: translateX(0);
        }

        @media print {
            .buttons {
                display: none !important;
            }
            
            .toast {
                display: none !important;
            }
            
            /* Nascondi placeholder "Libero" nella stampa */
            input::placeholder {
                color: transparent !important;
            }
            
            input[placeholder="Libero"] {
                color: transparent !important;
            }
            
            /* Rendi i selettori come campi vuoti nella stampa */
            #meseSelect, #annoSelect {
                appearance: none !important;
                -webkit-appearance: none !important;
                -moz-appearance: none !important;
                background: transparent !important;
                color: #333 !important;
                border: none !important;
                border-bottom: 1px solid #333 !important;
                font-size: 16px !important;
                font-weight: bold !important;
            }
            
            /* Forza il display del valore selezionato */
            select {
                -webkit-print-color-adjust: exact !important;
                color-adjust: exact !important;
            }
            
            option:checked {
                color: #333 !important;
                background: transparent !important;
            }
            
            .form-info {
                display: grid !important;
                grid-template-columns: 1fr 1fr !important;
                gap: 20px !important;
                margin-bottom: 8px !important;
                font-size: 11px !important;
            }
            
            body {
                padding: 0 !important;
                margin: 0 !important;
                font-size: 10px;
                line-height: 1.15;
                overflow: hidden;
            }
            
            .container {
                max-width: none !important;
                border: 1px solid #333;
                margin: 0 !important;
                transform: scale(0.88);
                transform-origin: top left;
                width: 114%;
                page-break-inside: avoid !important;
                height: auto;
                max-height: none;
            }
            
            /* Forza altezza massima per stare in una pagina A4 */
            @media print and (max-height: 11in) {
                .container {
                    transform: scale(0.85) !important;
                    width: 118% !important;
                }
                
                .presenze-table {
                    font-size: 8.5px !important;
                }
                
                .presenze-table th,
                .presenze-table td {
                    height: 19px !important;
                    max-height: 19px !important;
                }
            }
            
            .header {
                padding: 6px;
                font-size: 10px;
                height: auto;
                max-height: 50px;
                position: relative;
            }
            
            .header-right {
                font-size: 9px;
                position: absolute;
                top: 6px;
                right: 6px;
            }
            
            .logo {
                font-size: 24px;
            }
            
            .form-header {
                padding: 8px;
                height: auto;
                max-height: 75px;
            }
            
            .form-header h1 {
                font-size: 15px;
                margin-bottom: 8px;
            }
            
            .form-info {
                margin-bottom: 8px;
                font-size: 11px;
            }
            
            .form-info input {
                padding: 3px;
            }
            
            .presenze-table {
                font-size: 9px;
                page-break-inside: avoid !important;
                width: 100%;
                table-layout: fixed;
                border: 2px solid #333 !important;
                outline: 1px solid #333 !important;
                border-right: 2px solid #333 !important;
                border-left: 2px solid #333 !important;
                border-top: 2px solid #333 !important;
                border-bottom: 2px solid #333 !important;
            }
            
            .presenze-table th,
            .presenze-table td {
                padding: 2px;
                border: 1px solid #333 !important;
                border-right: 1px solid #333 !important;
                vertical-align: middle;
                height: 20px;
                max-height: 20px;
                overflow: hidden;
            }
            
            /* Forza i bordi delle ultime colonne */
            .presenze-table th:last-child,
            .presenze-table td:last-child {
                border-right: 2px solid #333 !important;
            }
            
            .data-column {
                width: 35px;
                font-size: 8px;
            }
            
            .ordinarie-column {
                width: 55px;
            }
            
            .turni-column {
                width: 70px;
            }
            
            .straord-column {
                width: 50px;
            }
            
            .note-column {
                width: 180px;
            }
            
            .time-input,
            .note-input {
                font-size: 8.5px;
                padding: 1px;
                height: 18px;
            }
            
            .footer-section {
                padding: 6px;
                font-size: 9px;
                max-height: 100px;
                page-break-inside: avoid !important;
            }
            
            .firma-section {
                margin: 6px 0;
                gap: 25px;
                display: grid !important;
                grid-template-columns: 1fr 1fr !important;
                page-break-inside: avoid !important;
            }
            
            .firma-box {
                display: inline-block !important;
                width: 48% !important;
                vertical-align: top !important;
                text-align: center;
                font-size: 12px;
            }
            
            .firma-line {
                height: 22px;
                margin: 3px 0;
            }
            
            .avviso {
                display: none !important;
            }
            
            @page {
                margin: 0.3in;
                size: A4;
            }
            
            /* Forzature aggressive per una pagina */
            * {
                page-break-inside: avoid !important;
                page-break-after: avoid !important;
                page-break-before: avoid !important;
            }
            
            body, html {
                height: auto !important;
                overflow: hidden !important;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header con logo -->
        <div class="header">
            <div class="logo-section">
                <div class="logo">
                    lavoro<span class="piu">pi√π</span>
                </div>
                <div class="gear">‚öôÔ∏è</div>
            </div>
            <div class="header-right">
                OW 21 Ed. 05 del 25/07/2016
            </div>
        </div>

        <!-- Intestazione modulo -->
        <div class="form-header">
            <h1>FOGLIO PRESENZE Mese di 
                <select id="meseSelect" style="font-weight: bold; font-size: 16px; border: none; border-bottom: 1px solid #333; background: transparent; margin: 0 5px; appearance: none;">
                    <option value="0">GENNAIO</option>
                    <option value="1">FEBBRAIO</option>
                    <option value="2">MARZO</option>
                    <option value="3">APRILE</option>
                    <option value="4">MAGGIO</option>
                    <option value="5">GIUGNO</option>
                    <option value="6">LUGLIO</option>
                    <option value="7">AGOSTO</option>
                    <option value="8">SETTEMBRE</option>
                    <option value="9">OTTOBRE</option>
                    <option value="10" selected>NOVEMBRE</option>
                    <option value="11">DICEMBRE</option>
                </select>
                <select id="annoSelect" style="font-weight: bold; font-size: 16px; border: none; border-bottom: 1px solid #333; background: transparent; margin: 0 5px; appearance: none;">
                    <option value="2023">2023</option>
                    <option value="2024" selected>2024</option>
                    <option value="2025">2025</option>
                    <option value="2026">2026</option>
                </select>
            </h1>
            
            <div class="form-info">
                <div>
                    Dipendente: <input type="text" id="dipendente" placeholder="">
                </div>
                <div>
                    Azienda utilizzatrice: <input type="text" id="aziendaUtilizzatrice" placeholder="">
                </div>
            </div>
        </div>

        <!-- Tabella presenze -->
        <div style="border: 2px solid #333; margin: 0; overflow: hidden;">
            <table class="presenze-table">
                <thead>
                    <tr>
                        <th rowspan="2" class="data-column">DATA</th>
                        <th rowspan="2" class="ordinarie-column">Ordinarie</th>
                        <th colspan="2" style="border-bottom: 1px solid #333; text-align: center; font-weight: bold;">Ore lavorate</th>
                        <th colspan="2" style="border-bottom: 1px solid #333; text-align: center; font-weight: bold;">Straord. al</th>
                        <th rowspan="2" class="note-column">NOTE*</th>
                    </tr>
                    <tr>
                        <th class="turni-column" style="font-size: 8px;">Turni dalle ____ alle ____ al ____%</th>
                        <th class="turni-column" style="font-size: 8px;">Turni dalle ____ alle ____ al ____%</th>
                        <th class="straord-column" style="font-size: 9px;">____%</th>
                        <th class="straord-column" style="font-size: 9px;">____%</th>
                    </tr>
                </thead>
                <tbody id="presenzeTableBody">
                    <!-- Le righe verranno generate automaticamente -->
                </tbody>
            </table>
        </div>

        <!-- Footer -->
        <div class="footer-section">
            <!-- Firme sulla stessa riga -->
            <div class="firma-section">
                <div class="firma-box">
                    <div>Firma e timbro dell'azienda</div>
                    <div class="firma-line"></div>
                </div>
                <div class="firma-box">
                    <div>Firma del dipendente</div>
                    <div class="firma-line"></div>
                </div>
            </div>

            <!-- Avviso -->
            <div class="avviso">
                SPEDIRE IL PROSPETTO IN AGENZIA ENTRO LA FINE DEL MESE O AL TERMINE DELLA MISSIONE AL NUMERO DI FAX PRESENTE SOTTO<br>
                IL MANCATO TEMPESTIVO INVIO COMPORTER√Ä INEVITABILMENTE RITARDI NELL'ELABORAZIONE DEL CEDOLINO
            </div>
        </div>

        <!-- Pulsanti di controllo (solo su schermo) -->
        <div class="buttons">
            <button class="btn btn-primary" onclick="salvaPresenze()">üíæ Salva</button>
            <button class="btn" onclick="caricaPresenze()">üìÇ Carica</button>
            <button class="btn" onclick="resetPresenze()">üîÑ Reset</button>
            <button class="btn" onclick="esportaPDF()" style="background: #28a745; color: white; border-color: #28a745;">üìÑ PDF</button>
        </div>
    </div>

    <div class="toast" id="toast"></div>

    <script>
// Dati globali
let presenzeData = {};
let meseCorrente = 10; // Novembre (0-based)
let annoCorrente = 2024;

// Inizializzazione
document.addEventListener('DOMContentLoaded', function() {
    inizializzaSelettori();
    generaTabellaPresenze();
    caricaDatiSalvati();
    setupEventListeners();
});

// Inizializza i selettori mese/anno
function inizializzaSelettori() {
    const meseSelect = document.getElementById('meseSelect');
    const annoSelect = document.getElementById('annoSelect');
    
    meseSelect.value = meseCorrente;
    annoSelect.value = annoCorrente;
}

// Genera la tabella presenze per il mese/anno selezionato
function generaTabellaPresenze() {
    const tbody = document.getElementById('presenzeTableBody');
    
    // Pulisci la tabella esistente
    tbody.innerHTML = '';
    
    // Ottieni mese e anno dai selettori
    meseCorrente = parseInt(document.getElementById('meseSelect').value);
    annoCorrente = parseInt(document.getElementById('annoSelect').value);
    
    const giorniDelMese = new Date(annoCorrente, meseCorrente + 1, 0).getDate();
    const nomiGiorni = ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'];
    
    for (let giorno = 1; giorno <= giorniDelMese; giorno++) {
        const data = new Date(annoCorrente, meseCorrente, giorno);
        const giornoSettimana = data.getDay();
        const nomeGiorno = nomiGiorni[giornoSettimana];
        const isWeekend = giornoSettimana === 0 || giornoSettimana === 6;
        
        const row = document.createElement('tr');
        row.className = isWeekend ? 'weekend-row' : '';
        
        row.innerHTML = `
            <td class="data-column">
                <strong>${giorno}</strong><br>
                <small style="font-size: 9px;">${nomeGiorno}</small>
            </td>
            <td><input type="time" class="time-input" id="ordinarie_${giorno}" title="Ore ordinarie (calcolate automaticamente dal turno)" style="background: #f8f9fa;"></td>
            <td><input type="text" class="time-input" id="turno1_${giorno}" placeholder="__:__-__:__" maxlength="11" title="Inserisci solo numeri per orario turno (es: 08001700 diventa 08:00-17:00)"></td>
            <td><input type="text" class="time-input" id="turno2_${giorno}" placeholder="Libero" title="Campo libero per annotazioni"></td>
            <td><input type="text" class="time-input" id="straord1_${giorno}" placeholder="Libero" title="Campo libero per annotazioni"></td>
            <td><input type="text" class="time-input" id="straord2_${giorno}" placeholder="Libero" title="Campo libero per annotazioni"></td>
            <td><input type="text" class="note-input" id="note_${giorno}" placeholder="Note..." title="Note: malattie, infortuni, ferie, maternit√†, ecc."></td>
        `;
        
        tbody.appendChild(row);
    }
    
    // Aggiungi riga totale
    const totaleRow = document.createElement('tr');
    totaleRow.className = 'totale-row';
    totaleRow.innerHTML = `
        <td style="text-align: center; vertical-align: middle; font-weight: bold;">Totale ore</td>
        <td id="totaleOrdinarie" style="text-align: center; vertical-align: middle; font-weight: bold;">0:00</td>
        <td colspan="4" style="text-align: center; vertical-align: middle; font-weight: bold; height: 45px;">Totale complessivo: <span id="totaleComplessivo">0:00</span></td>
        <td style="text-align: center; vertical-align: middle; font-weight: bold; font-size: 11px; height: 45px;">Pasti consumati / Ticket n. _______</td>
    `;
    tbody.appendChild(totaleRow);
    
    // Ricalcola i totali dopo aver rigenerato la tabella
    calcolaTotali();
}

// Setup event listeners
function setupEventListeners() {
    // Listener per cambi nei campi
    document.addEventListener('input', function(e) {
        if (e.target.classList.contains('time-input') || e.target.classList.contains('note-input')) {
            // Solo per il primo turno calcola automaticamente le ore ordinarie
            if (e.target.id.includes('turno1')) {
                formattaTurno(e.target);
                calcolaOreOrdinarieDaTurno1(e.target);
            }
            calcolaTotali();
            salvaDatiAutomatico();
        }
    });
    
    // Listener speciale per il calcolo automatico quando si clicca fuori dal campo turno1
    document.addEventListener('blur', function(e) {
        if (e.target.id.includes('turno1')) {
            // Ricalcola quando l'utente esce dal campo turno1
            calcolaOreOrdinarieDaTurno1(e.target);
            calcolaTotali();
        }
    }, true);
    
    // Listener speciale per il tasto backspace sui turni
    document.addEventListener('keydown', function(e) {
        if (e.target.id.includes('turno1')) {
            // Se premuto backspace, permetti la cancellazione normale
            if (e.key === 'Backspace' || e.key === 'Delete') {
                // Non fare nulla, lascia che il browser gestisca la cancellazione
                return;
            }
        }
    });
    
    // Listener per cambi dipendente e azienda
    document.getElementById('dipendente').addEventListener('input', salvaDatiAutomatico);
    document.getElementById('aziendaUtilizzatrice').addEventListener('input', salvaDatiAutomatico);
    
    // Listener per cambi di mese/anno - rigenera la tabella
    document.getElementById('meseSelect').addEventListener('change', function() {
        // Salva i dati attuali prima di cambiare
        salvaDatiPerMeseAnno();
        generaTabellaPresenze();
        caricaDatiPerMeseAnno();
        mostraToast(`Tabella aggiornata per ${getNomeMese()} ${annoCorrente}! üìÖ`);
    });
    
    document.getElementById('annoSelect').addEventListener('change', function() {
        // Salva i dati attuali prima di cambiare
        salvaDatiPerMeseAnno();
        generaTabellaPresenze();
        caricaDatiPerMeseAnno();
        mostraToast(`Tabella aggiornata per ${getNomeMese()} ${annoCorrente}! üìÖ`);
    });
}

// Formatta automaticamente il turno mentre l'utente digita
function formattaTurno(input) {
    // Salva la posizione del cursore
    const cursorPosition = input.selectionStart;
    
    // Rimuovi tutto tranne i numeri per ottenere solo le cifre
    let numbersOnly = input.value.replace(/[^0-9]/g, '');
    
    // Limita a massimo 8 cifre (HHMMHHMM)
    if (numbersOnly.length > 8) {
        numbersOnly = numbersOnly.substring(0, 8);
    }
    
    let formatted = '';
    
    // Formatta in base alla lunghezza dei numeri inseriti
    if (numbersOnly.length >= 1) {
        formatted += numbersOnly.substring(0, Math.min(2, numbersOnly.length));
        
        if (numbersOnly.length >= 2) {
            formatted += ':' + numbersOnly.substring(2, Math.min(4, numbersOnly.length));
            
            if (numbersOnly.length >= 4) {
                formatted += '-' + numbersOnly.substring(4, Math.min(6, numbersOnly.length));
                
                if (numbersOnly.length >= 6) {
                    formatted += ':' + numbersOnly.substring(6, Math.min(8, numbersOnly.length));
                }
            }
        }
    }
    
    // Aggiorna il valore solo se √® diverso da quello attuale
    if (input.value !== formatted) {
        input.value = formatted;
        
        // Riposiziona il cursore alla fine se l'utente stava digitando
        const newCursorPosition = formatted.length;
        input.setSelectionRange(newCursorPosition, newCursorPosition);
    }
}

// Calcola automaticamente le ore ordinarie solo dal primo turno
function calcolaOreOrdinarieDaTurno1(inputTurno) {
    // Estrai il numero del giorno dall'ID (prende il numero dopo l'underscore)
    const match = inputTurno.id.match(/turno1_(\d+)/);
    if (!match) return;
    
    const giorno = match[1];
    const turno1 = document.getElementById(`turno1_${giorno}`);
    const ordinarie = document.getElementById(`ordinarie_${giorno}`);
    
    if (!ordinarie || !turno1) return;
    
    let totaleMinutiLavorati = 0;
    
    // Verifica se il turno √® completo nel formato HH:MM-HH:MM
    if (turno1.value && turno1.value.includes('-') && turno1.value.includes(':')) {
        const parts = turno1.value.split('-');
        
        // Controlla che abbiamo entrambe le parti (inizio e fine) complete
        if (parts.length === 2) {
            const inizio = parts[0].trim();
            const fine = parts[1].trim();
            
            // Verifica che entrambe le parti abbiano il formato HH:MM
            if (inizio.length >= 4 && inizio.includes(':') && 
                fine.length >= 4 && fine.includes(':')) {
                totaleMinutiLavorati = calcolaMinutiTurno(turno1.value);
            }
        }
    }
    
    // Converte in formato HH:MM e aggiorna il campo ordinarie
    if (totaleMinutiLavorati > 0) {
        const oreCalcolate = minutesToTime(totaleMinutiLavorati);
        ordinarie.value = oreCalcolate;
        
        // Mostra un feedback visivo sulla cella CORRETTA
        ordinarie.style.backgroundColor = '#e8f5e8';
        setTimeout(() => {
            ordinarie.style.backgroundColor = '#f8f9fa';
        }, 1000);
    } else if (!turno1.value || turno1.value.length === 0) {
        // Se il turno √® vuoto, svuota anche le ordinarie
        ordinarie.value = '';
    }
}

// Ottieni il nome del mese corrente
function getNomeMese() {
    const nomiMesi = [
        'GENNAIO', 'FEBBRAIO', 'MARZO', 'APRILE', 'MAGGIO', 'GIUGNO',
        'LUGLIO', 'AGOSTO', 'SETTEMBRE', 'OTTOBRE', 'NOVEMBRE', 'DICEMBRE'
    ];
    return nomiMesi[meseCorrente];
}

// Calcola i totali (ora basato solo sulle ore ordinarie)
function calcolaTotali() {
    let totaleMinutiOrdinarie = 0;
    
    const giorniDelMese = new Date(annoCorrente, meseCorrente + 1, 0).getDate();
    
    for (let giorno = 1; giorno <= giorniDelMese; giorno++) {
        // Controlla se l'elemento esiste (importante dopo la rigenerazione)
        const ordinarie = document.getElementById(`ordinarie_${giorno}`);
        if (!ordinarie) continue;
        
        // Ore ordinarie (unica fonte per il totale)
        if (ordinarie.value) {
            const minuti = timeToMinutes(ordinarie.value);
            totaleMinutiOrdinarie += minuti;
        }
    }
    
    // Aggiorna la UI
    const totaleOrdinarie = document.getElementById('totaleOrdinarie');
    const totaleComplessivo = document.getElementById('totaleComplessivo');
    
    if (totaleOrdinarie) totaleOrdinarie.innerHTML = `<strong>${minutesToTime(totaleMinutiOrdinarie)}</strong>`;
    if (totaleComplessivo) totaleComplessivo.textContent = minutesToTime(totaleMinutiOrdinarie);
}

// Converte time (HH:MM) in minuti
function timeToMinutes(timeStr) {
    if (!timeStr || !timeStr.includes(':')) return 0;
    const [ore, minuti] = timeStr.split(':').map(Number);
    return (ore * 60) + minuti;
}

// Converte minuti in formato HH:MM (con zero leading per compatibilit√† input type="time")
function minutesToTime(minuti) {
    const ore = Math.floor(minuti / 60);
    const min = minuti % 60;
    return `${ore.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}`;
}

// Calcola minuti da un turno (es: "08:00-17:00") - Versione migliorata
function calcolaMinutiTurno(turno) {
    if (!turno.includes('-')) return 0;
    
    const [inizio, fine] = turno.split('-');
    
    // Verifica che entrambe le parti abbiano almeno il formato HH:MM
    if (!inizio.includes(':') || !fine.includes(':')) return 0;
    
    const minutiInizio = timeToMinutes(inizio.trim());
    const minutiFine = timeToMinutes(fine.trim());
    
    let differenza = minutiFine - minutiInizio;
    if (differenza < 0) differenza += (24 * 60); // Gestisce turni notturni
    
    // Sottrai pausa pranzo standard di 1 ora se il turno √® > 6 ore
    if (differenza > 360) {
        differenza -= 60;
    }
    
    return Math.max(0, differenza);
}

// Salva i dati automaticamente nel localStorage con chiave specifica per mese/anno
function salvaDatiAutomatico() {
    salvaDatiPerMeseAnno();
}

// Salva dati per il mese/anno corrente
function salvaDatiPerMeseAnno() {
    const dati = raccogliDati();
    const chiave = `presenzeLavoroPiu_${annoCorrente}_${meseCorrente}`;
    localStorage.setItem(chiave, JSON.stringify(dati));
}

// Carica dati per il mese/anno corrente
function caricaDatiPerMeseAnno() {
    const chiave = `presenzeLavoroPiu_${annoCorrente}_${meseCorrente}`;
    const datiSalvati = localStorage.getItem(chiave);
    
    if (datiSalvati) {
        const dati = JSON.parse(datiSalvati);
        caricaDatiNellaTabella(dati);
    }
}

// Raccoglie tutti i dati del modulo
function raccogliDati() {
    const dati = {
        dipendente: document.getElementById('dipendente').value,
        aziendaUtilizzatrice: document.getElementById('aziendaUtilizzatrice').value,
        mese: meseCorrente,
        anno: annoCorrente,
        giorni: {}
    };
    
    const giorniDelMese = new Date(annoCorrente, meseCorrente + 1, 0).getDate();
    for (let giorno = 1; giorno <= giorniDelMese; giorno++) {
        const ordinarie = document.getElementById(`ordinarie_${giorno}`);
        const turno1 = document.getElementById(`turno1_${giorno}`);
        const turno2 = document.getElementById(`turno2_${giorno}`);
        const straord1 = document.getElementById(`straord1_${giorno}`);
        const straord2 = document.getElementById(`straord2_${giorno}`);
        const note = document.getElementById(`note_${giorno}`);
        
        if (ordinarie) {
            dati.giorni[giorno] = {
                ordinarie: ordinarie.value || '',
                turno1: turno1 ? turno1.value : '',
                turno2: turno2 ? turno2.value : '',
                straord1: straord1 ? straord1.value : '',
                straord2: straord2 ? straord2.value : '',
                note: note ? note.value : ''
            };
        }
    }
    
    return dati;
}

// Carica i dati nella tabella
function caricaDatiNellaTabella(dati) {
    // Carica informazioni base
    if (dati.dipendente) document.getElementById('dipendente').value = dati.dipendente;
    if (dati.aziendaUtilizzatrice) document.getElementById('aziendaUtilizzatrice').value = dati.aziendaUtilizzatrice;
    
    // Carica dati giorni
    if (dati.giorni) {
        for (const [giorno, info] of Object.entries(dati.giorni)) {
            const ordinarie = document.getElementById(`ordinarie_${giorno}`);
            const turno1 = document.getElementById(`turno1_${giorno}`);
            const turno2 = document.getElementById(`turno2_${giorno}`);
            const straord1 = document.getElementById(`straord1_${giorno}`);
            const straord2 = document.getElementById(`straord2_${giorno}`);
            const note = document.getElementById(`note_${giorno}`);
            
            if (ordinarie && info.ordinarie) ordinarie.value = info.ordinarie;
            if (turno1 && info.turno1) turno1.value = info.turno1;
            if (turno2 && info.turno2) turno2.value = info.turno2;
            if (straord1 && info.straord1) straord1.value = info.straord1;
            if (straord2 && info.straord2) straord2.value = info.straord2;
            if (note && info.note) note.value = info.note;
        }
    }
    
    calcolaTotali();
}

// Carica i dati salvati (compatibilit√† con versione precedente)
function caricaDatiSalvati() {
    // Prima prova a caricare i dati per il mese/anno corrente
    caricaDatiPerMeseAnno();
    
    // Se non trova nulla, prova con la vecchia chiave (solo per novembre 2024)
    if (meseCorrente === 10 && annoCorrente === 2024) {
        const datiVecchi = localStorage.getItem('presenzeLavoroPiu2024');
        if (datiVecchi && !localStorage.getItem(`presenzeLavoroPiu_${annoCorrente}_${meseCorrente}`)) {
            try {
                const dati = JSON.parse(datiVecchi);
                caricaDatiNellaTabella(dati);
                mostraToast('Dati precedenti caricati automaticamente! üìÇ');
            } catch (error) {
                console.error('Errore nel caricamento dati precedenti:', error);
            }
        }
    }
}

// Funzioni per i pulsanti
function salvaPresenze() {
    const dati = raccogliDati();
    
    // Salva nel localStorage
    salvaDatiPerMeseAnno();
    
    // Crea un file di backup
    const dataStr = JSON.stringify(dati, null, 2);
    const dataBlob = new Blob([dataStr], {type: 'application/json'});
    const url = URL.createObjectURL(dataBlob);
    
    const nomeMese = getNomeMese().toLowerCase();
    const nomeFile = dati.dipendente ? 
        `presenze_lavoropiu_${dati.dipendente.replace(/\s+/g, '_')}_${nomeMese}_${annoCorrente}.json` :
        `presenze_lavoropiu_${nomeMese}_${annoCorrente}.json`;
    
    const link = document.createElement('a');
    link.href = url;
    link.download = nomeFile;
    link.click();
    
    URL.revokeObjectURL(url);
    mostraToast(`Presenze di ${getNomeMese()} ${annoCorrente} salvate! üíæ`);
}

function esportaPDF() {
    // Nascondi i pulsanti per la stampa
    const buttons = document.querySelector('.buttons');
    buttons.style.display = 'none';
    
    // Aggiungi classe per stampa compatta se non gi√† presente
    document.body.classList.add('stampa-compatta');
    
    // Apri il dialogo di stampa
    window.print();
    
    // Mostra di nuovo i pulsanti e rimuovi classe dopo la stampa
    setTimeout(() => {
        buttons.style.display = 'flex';
        document.body.classList.remove('stampa-compatta');
    }, 1000);
    
    mostraToast('Pronto per PDF/Stampa! üìÑ Seleziona "Salva come PDF" per WhatsApp');
}

function caricaPresenze() {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = '.json';
    
    input.onchange = function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const dati = JSON.parse(e.target.result);
                    
                    // Se i dati hanno mese/anno, aggiorna i selettori
                    if (dati.mese !== undefined && dati.anno !== undefined) {
                        document.getElementById('meseSelect').value = dati.mese;
                        document.getElementById('annoSelect').value = dati.anno;
                        meseCorrente = dati.mese;
                        annoCorrente = dati.anno;
                        generaTabellaPresenze();
                    }
                    
                    caricaDatiNellaTabella(dati);
                    salvaDatiPerMeseAnno();
                    mostraToast('Dati caricati con successo! üìÇ');
                } catch (error) {
                    mostraToast('Errore nel caricamento del file! ‚ùå');
                }
            };
            reader.readAsText(file);
        }
    };
    
    input.click();
}

function resetPresenze() {
    if (confirm(`Sei sicuro di voler cancellare tutti i dati di ${getNomeMese()} ${annoCorrente}?`)) {
        const chiave = `presenzeLavoroPiu_${annoCorrente}_${meseCorrente}`;
        localStorage.removeItem(chiave);
        generaTabellaPresenze();
        mostraToast(`Dati di ${getNomeMese()} ${annoCorrente} cancellati! üîÑ`);
    }
}

// Mostra toast notification
function mostraToast(messaggio) {
    const toast = document.getElementById('toast');
    toast.textContent = messaggio;
    toast.classList.add('show');
    
    setTimeout(() => {
        toast.classList.remove('show');
    }, 3000);
}

// Funzioni di utilit√† per migliorare l'UX

// Auto-formattazione turni
document.addEventListener('input', function(e) {
    if (e.target.id.includes('turno') && e.target.value.length === 4 && !e.target.value.includes(':')) {
        // Auto-inserisce i due punti (es: 0800 diventa 08:00)
        const value = e.target.value;
        e.target.value = value.substring(0, 2) + ':' + value.substring(2);
    }
});

// Suggerimenti per i turni pi√π comuni
function suggerisciTurno(input, tipo) {
    const suggerimenti = {
        'mattina': '08:00-17:00',
        'pomeriggio': '14:00-22:00',
        'notte': '22:00-06:00'
    };
    
    if (suggerimenti[tipo]) {
        input.value = suggerimenti[tipo];
        calcolaTotali();
        salvaDatiAutomatico();
    }
}

// Aggiungi context menu per suggerimenti rapidi
document.addEventListener('contextmenu', function(e) {
    if (e.target.id.includes('turno1') || e.target.id.includes('turno2')) {
        e.preventDefault();
        
        const menu = document.createElement('div');
        menu.style.cssText = `
            position: fixed;
            top: ${e.clientY}px;
            left: ${e.clientX}px;
            background: white;
            border: 1px solid #333;
            padding: 5px;
            z-index: 1000;
            font-size: 12px;
        `;
        
        menu.innerHTML = `
            <div onclick="suggerisciTurno(document.getElementById('${e.target.id}'), 'mattina')" style="padding: 5px; cursor: pointer;">Mattina (08:00-17:00)</div>
            <div onclick="suggerisciTurno(document.getElementById('${e.target.id}'), 'pomeriggio')" style="padding: 5px; cursor: pointer;">Pomeriggio (14:00-22:00)</div>
            <div onclick="suggerisciTurno(document.getElementById('${e.target.id}'), 'notte')" style="padding: 5px; cursor: pointer;">Notte (22:00-06:00)</div>
        `;
        
        document.body.appendChild(menu);
        
        // Rimuovi il menu dopo un click
        setTimeout(() => {
            menu.addEventListener('click', () => {
                document.body.removeChild(menu);
            });
            
            document.addEventListener('click', function removeMenu() {
                if (document.body.contains(menu)) {
                    document.body.removeChild(menu);
                }
                document.removeEventListener('click', removeMenu);
            });
        }, 100);
    }
});
    </script>
</body>
</html> 